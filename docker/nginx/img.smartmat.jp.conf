server {
    charset UTF-8;
    listen 80;
    server_name ecs.server.smartmat.jp;
    #root /home/ec2-user/workspace/mat_admin_system/src/server/fileupload;
    root /var/fileupload;

    location / {
        # app.smartmat.jpからのリクエストはすべて許可
        if ($request_method = 'OPTIONS') {
             add_header Access-Control-Allow-Origin 'https://app.smartmat.jp' always;
             add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
             add_header Access-Control-Allow-Headers 'Origin, Authorization, Accept, Content-Type';
             add_header Access-Control-Max-Age 3600;

             add_header Content-Type 'text/plain charset=UTF-8';
             add_header Content-Length 0;

             return 204;
        }
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header Access-Control-Allow-Origin 'https://app.smartmat.jp' always;

        proxy_pass http://localhost:8888;
        proxy_cache czone;
        proxy_cache_key $scheme$proxy_host$uri$is_args$args;
        #proxy_cache_valid 200 1h;
    }
}

server {
    charset UTF-8;
    listen 8888;
    server_name ecs.server.smartmat.jp;
    #root /home/ec2-user/workspace/mat_admin_system/src/server/fileupload;
    root /var/fileupload;

    access_log /var/log/nginx/img-access.log  ltsv;
    error_log /var/log/nginx/img-error.log   warn;

    resolver 8.8.8.8;

    location ~ /(.*UTF8)$ {
        charset UTF-8;

        set $file $1;
        set $width 150;
        set $height 150;
        set $quality 75;

        if ($query_string !~ .*=.*) {
          rewrite ^ /$file break;
        }

        if ($arg_width ~ (\d*)) {
            set $width $1;
        }
        if ($arg_height ~ (\d*)) {
            set $height $1;
        }
        if ($arg_quality ~ (100|[1-9][0-9]|[1-9])) {
            set $quality $1;
        }

        if ($arg_type = "resize") {
            rewrite ^ /resize last;
        }

        rewrite ^ /crop last;
    }

    #location /resize {
    #    internal;
    #    image_filter  resize  $width  $height;
    #    image_filter_jpeg_quality  $quality;
    #    rewrite ^ /$file break;

    #    error_page 415 = @empty;
    #}

    #location /crop {
    #    internal;
    #    image_filter  crop  $width  $height;
    #    image_filter_jpeg_quality  $quality;
    #    rewrite ^ /$file break;

    #    error_page 415 = @empty;
    #}

    location @empty {
        empty_gif;
    }
}
